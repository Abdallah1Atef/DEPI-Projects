{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# The Grand Web Scraping Assignment: A Data Analyst's Quest\n",
    "\n",
    "Welcome to your comprehensive web scraping assignment! In this project, you will step into the role of a data analyst for a market research firm. Your mission is to gather, process, and analyze data from two different websites to provide valuable insights. This project will test your skills in fetching web pages, parsing HTML, handling various scraping challenges, cleaning data, and performing analysis.\n",
    "\n",
    "## üéØ Project Scenario: The Market Analyst's Toolkit\n",
    "\n",
    "Your firm needs to understand two key markets. To do this, you will scrape the two websites specified in the notebooks you provided:\n",
    "\n",
    "1.  **The Job Market:** To analyze trends in job postings, you will scrape **`https://realpython.github.io/fake-jobs/`**, a mock job board with various job listings.\n",
    "2.  **The World of Ideas:** To find the most influential quotes and authors, you will scrape **`http://quotes.toscrape.com/`**, a website containing a large collection of quotes.\n",
    "\n",
    "## üìñ Project Overview\n",
    "\n",
    "This assignment is divided into four major parts, each with its own set of tasks:\n",
    "\n",
    "1.  **Part 1: The Job Market Analysis:** You will scrape a single page of job listings, clean the data, and perform initial analysis.\n",
    "2.  **Part 2: The World of Ideas - Multi-Page Scraping:** You will tackle the challenge of pagination by scraping all quotes from all pages of the quotes website.\n",
    "3.  **Part 3: The Deep Dive - Advanced Scraping:** You will enhance your quotes dataset by visiting the individual author pages to gather more detailed information.\n",
    "4.  **Part 4: Final Analysis and Reporting:** You will combine and analyze your datasets to answer key business questions and present your findings."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## üìù Getting Started: Setup and Preliminaries\n",
    "\n",
    "First, let's make sure you have all the necessary libraries installed and imported."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: requests in c:\\users\\atef1\\anaconda3\\lib\\site-packages (2.31.0)\n",
      "Requirement already satisfied: beautifulsoup4 in c:\\users\\atef1\\anaconda3\\lib\\site-packages (4.12.2)\n",
      "Requirement already satisfied: pandas in c:\\users\\atef1\\anaconda3\\lib\\site-packages (2.0.3)\n",
      "Requirement already satisfied: matplotlib in c:\\users\\atef1\\anaconda3\\lib\\site-packages (3.7.2)\n",
      "Requirement already satisfied: seaborn in c:\\users\\atef1\\anaconda3\\lib\\site-packages (0.12.2)\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in c:\\users\\atef1\\anaconda3\\lib\\site-packages (from requests) (2.0.4)\n",
      "Requirement already satisfied: idna<4,>=2.5 in c:\\users\\atef1\\anaconda3\\lib\\site-packages (from requests) (3.4)\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in c:\\users\\atef1\\anaconda3\\lib\\site-packages (from requests) (1.26.16)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in c:\\users\\atef1\\anaconda3\\lib\\site-packages (from requests) (2025.6.15)\n",
      "Requirement already satisfied: soupsieve>1.2 in c:\\users\\atef1\\anaconda3\\lib\\site-packages (from beautifulsoup4) (2.4)\n",
      "Requirement already satisfied: python-dateutil>=2.8.2 in c:\\users\\atef1\\anaconda3\\lib\\site-packages (from pandas) (2.8.2)\n",
      "Requirement already satisfied: pytz>=2020.1 in c:\\users\\atef1\\anaconda3\\lib\\site-packages (from pandas) (2023.3.post1)\n",
      "Requirement already satisfied: tzdata>=2022.1 in c:\\users\\atef1\\anaconda3\\lib\\site-packages (from pandas) (2023.3)\n",
      "Requirement already satisfied: numpy>=1.21.0 in c:\\users\\atef1\\anaconda3\\lib\\site-packages (from pandas) (1.24.3)\n",
      "Requirement already satisfied: contourpy>=1.0.1 in c:\\users\\atef1\\anaconda3\\lib\\site-packages (from matplotlib) (1.0.5)\n",
      "Requirement already satisfied: cycler>=0.10 in c:\\users\\atef1\\anaconda3\\lib\\site-packages (from matplotlib) (0.11.0)\n",
      "Requirement already satisfied: fonttools>=4.22.0 in c:\\users\\atef1\\anaconda3\\lib\\site-packages (from matplotlib) (4.25.0)\n",
      "Requirement already satisfied: kiwisolver>=1.0.1 in c:\\users\\atef1\\anaconda3\\lib\\site-packages (from matplotlib) (1.4.4)\n",
      "Requirement already satisfied: packaging>=20.0 in c:\\users\\atef1\\anaconda3\\lib\\site-packages (from matplotlib) (23.1)\n",
      "Requirement already satisfied: pillow>=6.2.0 in c:\\users\\atef1\\anaconda3\\lib\\site-packages (from matplotlib) (9.4.0)\n",
      "Requirement already satisfied: pyparsing<3.1,>=2.3.1 in c:\\users\\atef1\\anaconda3\\lib\\site-packages (from matplotlib) (3.0.9)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\atef1\\anaconda3\\lib\\site-packages (from python-dateutil>=2.8.2->pandas) (1.16.0)\n",
      "Requirement already satisfied: beautifulsoup4 in c:\\users\\atef1\\anaconda3\\lib\\site-packages (4.12.2)\n",
      "Requirement already satisfied: soupsieve>1.2 in c:\\users\\atef1\\anaconda3\\lib\\site-packages (from beautifulsoup4) (2.4)\n"
     ]
    }
   ],
   "source": [
    "# Step 1: Ensure all necessary libraries are installed\n",
    "!pip install requests beautifulsoup4 pandas matplotlib seaborn\n",
    "!pip install beautifulsoup4\n",
    "# Step 2: Import all necessary libraries and modules\n",
    "import requests\n",
    "from bs4 import BeautifulSoup\n",
    "import pandas as pd\n",
    "import time\n",
    "import re\n",
    "from collections import Counter\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Part 1: The Job Market Analysis (Scraping `fake-jobs`)\n",
    "\n",
    "In this part, you'll focus on scraping the job listings from `realpython.github.io/fake-jobs/`. This will cover the fundamentals of fetching a page, parsing it, and extracting structured data."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Task 1.1: Fetch and Parse the Web Page\n",
    "\n",
    "**Instructions:**\n",
    "1.  Define the URL for the fake jobs website.\n",
    "2.  Use the `requests` library to get the HTML content of the page.\n",
    "3.  Check the status code of the response to ensure the request was successful (a status code of 200 is what you're looking for).\n",
    "4.  Create a `BeautifulSoup` object to parse the HTML content."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Your code for Task 1.1 here\n",
    "url=\"https://realpython.github.io/fake-jobs/\"\n",
    "data=requests.get(url)\n",
    "if data.status_code == 200:\n",
    "    soup = BeautifulSoup(data.text,\"html.parser\")\n",
    "else: print(\"faild\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Task 1.2: Extract Job Posting Information\n",
    "\n",
    "**Instructions:**\n",
    "1.  Find the main container that holds all the job listings. (Hint: Look for a `div` with the ID `ResultsContainer`).\n",
    "2.  Within that container, find all the individual job posting elements. (Hint: Each job is in a `div` with the class `card-content`).\n",
    "3.  Create an empty list called `job_data` to store your results.\n",
    "4.  Loop through each job posting element and extract the following information:\n",
    "    * **Title:** Found in an `h2` tag with the class `title`.\n",
    "    * **Company:** Found in an `h3` tag with the class `company`.\n",
    "    * **Location:** Found in a `p` tag with the class `location`.\n",
    "5.  For each job, store this information in a dictionary and append it to your `job_data` list."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Your code for Task 1.2 here\n",
    "resultContainer=soup.find(id=\"ResultsContainer\")\n",
    "job_posting=resultContainer.find_all(\"div\", class_=\"card-content\")\n",
    "job_data=[]\n",
    "for i in job_posting:\n",
    "    title = i.find(\"h2\", class_=\"title\").text.strip()\n",
    "    company = i.find(\"h3\", class_=\"company\").text.strip()\n",
    "    location = i.find(\"p\", class_=\"location\").text.strip()\n",
    "    job_info = {\n",
    "        \"title\": title,\n",
    "        \"company\": company,\n",
    "        \"location\": location\n",
    "    }\n",
    "    job_data.append(job_info)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Task 1.3: Create and Clean a DataFrame\n",
    "\n",
    "**Instructions:**\n",
    "1.  Convert your `job_data` list of dictionaries into a pandas DataFrame.\n",
    "2.  Inspect the first few rows of the DataFrame using `.head()`.\n",
    "3.  Notice that the text fields might have extra whitespace. Use the `.strip()` method on your strings during extraction or apply a function to the DataFrame columns to clean them up.\n",
    "4.  Save the cleaned DataFrame to a CSV file named `jobs.csv`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                     title                     company              location\n",
      "0  Senior Python Developer    Payne, Roberts and Davis       Stewartbury, AA\n",
      "1          Energy engineer            Vasquez-Davidson  Christopherville, AA\n",
      "2          Legal executive  Jackson, Chambers and Levy   Port Ericaburgh, AA\n",
      "3   Fitness centre manager              Savage-Bradley     East Seanview, AP\n",
      "4          Product manager                 Ramirez Inc   North Jamieview, AP\n"
     ]
    }
   ],
   "source": [
    "# Your code for Task 1.3 here\n",
    "df = pd.DataFrame(job_data)\n",
    "print(df.head())\n",
    "df.to_csv(\"jobs.csv\", index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Task 1.4: Initial Data Analysis\n",
    "\n",
    "**Instructions:**\n",
    "1.  How many jobs were scraped in total?\n",
    "2.  Find all the jobs that have \"Python\" in their title (the search should be case-insensitive).\n",
    "3.  What are the top 10 most common job locations? Use `.value_counts()`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                  title     company         location\n",
      "count                               100         100              100\n",
      "unique                               92          99              100\n",
      "top     Python Programmer (Entry-Level)  Garcia PLC  Stewartbury, AA\n",
      "freq                                  3           2                1\n",
      "100\n",
      "# of Python jobs: 10\n",
      "                              title                   company         location\n",
      "0           Senior Python Developer  Payne, Roberts and Davis  Stewartbury, AA\n",
      "10       Software Engineer (Python)                Garcia PLC     Ericberg, AE\n",
      "20  Python Programmer (Entry-Level)    Moss, Duncan and Allen    Port Sara, AE\n",
      "30  Python Programmer (Entry-Level)           Cooper and Sons  West Victor, AE\n",
      "40      Software Developer (Python)              Adams-Brewer   Brockburgh, AE\n",
      "location\n",
      "Stewartbury, AA          1\n",
      "Port Devonville, AE      1\n",
      "Port Jeremy, AA          1\n",
      "Lloydton, AP             1\n",
      "Millsbury, AE            1\n",
      "New Elizabethside, AA    1\n",
      "Lake Antonio, AA         1\n",
      "New Kelly, AP            1\n",
      "Jamesville, AA           1\n",
      "Davidside, AA            1\n",
      "Name: count, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# Your code for Task 1.4 here\n",
    "print(df.describe())\n",
    "total_jobs = len(df)\n",
    "print(total_jobs)\n",
    "python_jobs = df[df[\"title\"].str.contains(\"python\", case=False)]\n",
    "print(f\"# of Python jobs: {len(python_jobs)}\")\n",
    "print(python_jobs.head())\n",
    "top_locations = df[\"location\"].value_counts().head(10)\n",
    "print(top_locations)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Part 2: The World of Ideas - Multi-Page Scraping (`quotes.toscrape.com`)\n",
    "\n",
    "In this part, you'll tackle a common web scraping challenge: pagination. You will scrape all quotes from all pages of the `quotes.toscrape.com` website."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Task 2.1: Scrape a Single Page of Quotes\n",
    "\n",
    "First, let's get comfortable with the structure of a single page.\n",
    "\n",
    "**Instructions:**\n",
    "1.  Fetch and parse the first page of `quotes.toscrape.com`.\n",
    "2.  Find all the quote containers (Hint: `div` with class `quote`).\n",
    "3.  For each quote, extract the text, the author's name, and the tags associated with it.\n",
    "4.  Store this information in a list of dictionaries."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Your code for Task 2.1 here\n",
    "url=\"https://quotes.toscrape.com\"\n",
    "data=requests.get(url)\n",
    "if data.status_code == 200:\n",
    "    soup = BeautifulSoup(data.text,\"html.parser\")\n",
    "else: print(\"faild\")\n",
    "\n",
    "quote_blocks = soup.find_all(\"div\", class_=\"quote\")\n",
    "quotes_data = []\n",
    "\n",
    "for quote in quote_blocks:\n",
    "    text = quote.find(class_=\"text\").text.strip()\n",
    "    author = quote.find(class_=\"author\").text.strip()\n",
    "    tags = [tag.text for tag in quote.find_all(\"a\", class_=\"tag\")]\n",
    "    quote_info = {\n",
    "        \"text\": text,\n",
    "        \"author\": author,\n",
    "        \"tags\": tags\n",
    "    }\n",
    "    quotes_data.append(quote_info)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Task 2.2: Implement Pagination Logic\n",
    "\n",
    "Now, let's build the logic to navigate through all the pages.\n",
    "\n",
    "**Instructions:**\n",
    "1.  Create an empty list called `all_quotes`.\n",
    "2.  Set up a `while` loop that will continue as long as there's a \"Next\" page to visit.\n",
    "3.  Inside the loop:\n",
    "    * Fetch and parse the current page.\n",
    "    * Scrape all the quotes from that page and add them to your `all_quotes` list.\n",
    "    * Find the \"Next\" button's link (Hint: look for an `li` with class `next`, and then the `a` tag inside it).\n",
    "    * If a \"Next\" button is found, construct the URL for the next page. If not, break the loop.\n",
    "    * **Ethical Scraping:** Add a `time.sleep(1)` to be respectful to the server."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<li class=\"next\">\n",
      "<a href=\"/page/2/\">Next <span aria-hidden=\"true\">‚Üí</span></a>\n",
      "</li>\n"
     ]
    }
   ],
   "source": [
    "next = soup.find(\"li\", class_=\"next\")\n",
    "print(next)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "100\n"
     ]
    }
   ],
   "source": [
    "# Your code for Task 2.2 here\n",
    "# üò• ÿßŸÜÿß ŸÇÿπÿØÿ™ ŸÅŸä ÿßŸÑÿ™ÿßÿ≥ŸÉ ÿØŸä ÿ≥ÿßÿπÿ© ŸàŸÜÿµ\n",
    "all_quotes=[]\n",
    "base_url =\"https://quotes.toscrape.com\"\n",
    "link=\"\"\n",
    "data=requests.get(base_url)\n",
    "if data.status_code == 200:\n",
    "    soup = BeautifulSoup(data.text,\"html.parser\")\n",
    "else: print(\"faild\")\n",
    "next = soup.find(\"li\", class_=\"next\") \n",
    "while(next!= None):\n",
    "    url=base_url + link\n",
    "    data=requests.get(url)\n",
    "    if data.status_code == 200:\n",
    "        soup = BeautifulSoup(data.text,\"html.parser\")\n",
    "    else: print(\"faild\")\n",
    "    quote_blocks = soup.find_all(\"div\", class_=\"quote\")\n",
    "    next = soup.find(\"li\", class_=\"next\")\n",
    "    for quote in quote_blocks:\n",
    "        text = quote.find(class_=\"text\").text.strip()\n",
    "        author = quote.find(class_=\"author\").text.strip()\n",
    "        tags = [tag.text for tag in quote.find_all(\"a\", class_=\"tag\")]\n",
    "        quote_info = {\n",
    "            \"text\": text,\n",
    "            \"author\": author,\n",
    "            \"tags\": tags\n",
    "        }\n",
    "        all_quotes.append(quote_info)\n",
    "    if(next!=None):\n",
    "        link=next.find(\"a\")[\"href\"]\n",
    "        time.sleep(1)\n",
    "print( len(all_quotes))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Task 2.3: Save and Analyze the Quotes Data\n",
    "\n",
    "**Instructions:**\n",
    "1.  Convert your `all_quotes` list into a pandas DataFrame.\n",
    "2.  Save the DataFrame to a CSV file named `quotes.csv`.\n",
    "3.  **Analysis:**\n",
    "    * Who are the top 10 most frequently quoted authors?\n",
    "    * What are the top 20 most common tags?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Top 10 most frequently quoted authors:\n",
      "author\n",
      "Albert Einstein      10\n",
      "J.K. Rowling          9\n",
      "Marilyn Monroe        7\n",
      "Dr. Seuss             6\n",
      "Mark Twain            6\n",
      "C.S. Lewis            5\n",
      "Jane Austen           5\n",
      "Bob Marley            3\n",
      "Eleanor Roosevelt     2\n",
      "Charles Bukowski      2\n",
      "Name: count, dtype: int64\n",
      "\n",
      "Top 20 most common tags:\n",
      "love                    14\n",
      "inspirational           13\n",
      "life                    13\n",
      "humor                   12\n",
      "books                   11\n",
      "reading                  7\n",
      "friendship               5\n",
      "truth                    4\n",
      "friends                  4\n",
      "attributed-no-source     3\n",
      "writing                  3\n",
      "simile                   3\n",
      "death                    3\n",
      "classic                  2\n",
      "dumbledore               2\n",
      "thinking                 2\n",
      "hope                     2\n",
      "philosophy               2\n",
      "religion                 2\n",
      "yourself                 2\n",
      "Name: count, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# Your code for Task 2.3 here\n",
    "df = pd.DataFrame(all_quotes)\n",
    "df.to_csv(\"quotes.csv\", index=False)\n",
    "top_authors = df[\"author\"].value_counts().head(10)\n",
    "print(\"Top 10 most frequently quoted authors:\")\n",
    "print(top_authors)\n",
    "all_tags = []\n",
    "for tag_list in df[\"tags\"]:\n",
    "    all_tags.extend(tag_list)\n",
    "tag_counts = pd.Series(all_tags).value_counts().head(20)\n",
    "print(\"\\nTop 20 most common tags:\")\n",
    "print(tag_counts)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Part 3: The Deep Dive - Scraping Author Details\n",
    "\n",
    "Now for a more advanced task. For each quote, there's a link to the author's biography page. You will now scrape these detail pages to enrich your dataset."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Task 3.1: Scrape Author Biographies\n",
    "\n",
    "**Instructions:**\n",
    "1.  Create an empty list called `author_details`.\n",
    "2.  Create a set to keep track of author URLs you've already visited to avoid duplicate work.\n",
    "3.  Loop through the quotes you scraped in Part 2 (or re-scrape the first page for testing).\n",
    "4.  For each quote, find the link to the author's page.\n",
    "5.  If you haven't visited this author's URL yet:\n",
    "    * Fetch and parse the author's page.\n",
    "    * Extract the author's name, birth date, and birth location.\n",
    "    * Store this in a dictionary and append it to `author_details`.\n",
    "    * Add the URL to your set of visited URLs.\n",
    "    * Don't forget to `time.sleep(1)`!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Your code for Task 3.1 here\n",
    "author_details = []\n",
    "visited_urls = set()\n",
    "quote_blocks = soup.find_all(\"div\", class_=\"quote\")\n",
    "\n",
    "for quote in quote_blocks:\n",
    "    author_link = quote.find(\"a\")[\"href\"]\n",
    "    full_url = base_url + author_link\n",
    "\n",
    "    if full_url not in visited_urls:\n",
    "        response = requests.get(full_url)\n",
    "        if response.status_code == 200:\n",
    "            author_soup = BeautifulSoup(response.text, \"html.parser\")\n",
    "\n",
    "            name = author_soup.find(\"h3\", class_=\"author-title\").text.strip()\n",
    "            birth_date = author_soup.find(\"span\", class_=\"author-born-date\").text.strip()\n",
    "            birth_location = author_soup.find(\"span\", class_=\"author-born-location\").text.strip()\n",
    "\n",
    "            author_details.append({\n",
    "                \"name\": name,\n",
    "                \"birth_date\": birth_date,\n",
    "                \"birth_location\": birth_location\n",
    "            })\n",
    "\n",
    "            visited_urls.add(full_url)\n",
    "            time.sleep(1)\n",
    "        else:\n",
    "            print(f\"failed\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Task 3.2: Merge and Save the Enriched Data\n",
    "\n",
    "**Instructions:**\n",
    "1.  Convert your `author_details` list into a DataFrame.\n",
    "2.  Merge your original quotes DataFrame with your new author details DataFrame. (Hint: Use `pd.merge` on the author's name).\n",
    "3.  Save the final, enriched DataFrame to a new CSV file named `quotes_with_authors.csv`."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                text           author  \\\n",
      "0  ‚ÄúThe world as we have created it is a process ...  Albert Einstein   \n",
      "1  ‚ÄúIt is our choices, Harry, that show what we t...     J.K. Rowling   \n",
      "2  ‚ÄúThere are only two ways to live your life. On...  Albert Einstein   \n",
      "3  ‚ÄúThe person, be it gentleman or lady, who has ...      Jane Austen   \n",
      "4  ‚ÄúImperfection is beauty, madness is genius and...   Marilyn Monroe   \n",
      "\n",
      "                                                tags     birth_date  \\\n",
      "0   ['change', 'deep-thoughts', 'thinking', 'world']            NaN   \n",
      "1                           ['abilities', 'choices']  July 31, 1965   \n",
      "2  ['inspirational', 'life', 'live', 'miracle', '...            NaN   \n",
      "3         ['aliteracy', 'books', 'classic', 'humor']            NaN   \n",
      "4                   ['be-yourself', 'inspirational']            NaN   \n",
      "\n",
      "                                      birth_location  \n",
      "0                                                NaN  \n",
      "1  in Yate, South Gloucestershire, England, The U...  \n",
      "2                                                NaN  \n",
      "3                                                NaN  \n",
      "4                                                NaN  \n"
     ]
    }
   ],
   "source": [
    "# Your code for Task 3.2 here\n",
    "df_quotes = pd.read_csv(\"quotes.csv\")\n",
    "df_authors = pd.DataFrame(author_details)\n",
    "df_authors.to_csv(\"author_bios.csv\", index=False)\n",
    "df_enriched = pd.merge(df_quotes, df_authors, how=\"left\", left_on=\"author\", right_on=\"name\")\n",
    "df_enriched.drop(columns=[\"name\"], inplace=True)\n",
    "df_enriched.to_csv(\"quotes_with_authors.csv\", index=False)\n",
    "print(df_enriched.head())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Part 4: Final Analysis and Reporting\n",
    "\n",
    "In this final part, you will use your cleaned and enriched datasets to generate some insightful visualizations."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Task 4.1: Visualize Job Market Insights\n",
    "\n",
    "**Instructions:**\n",
    "1.  Using your `jobs.csv` data, create a bar chart showing the top 10 job locations.\n",
    "2.  **Creative Challenge:** Create a new column in your jobs DataFrame called `skill_level`. Categorize jobs as 'Senior', 'Junior/Entry-Level', or 'Mid-Level' based on keywords in the title. Create a pie chart showing the distribution of these skill levels."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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JOXLl09ubm7KmzevvvnmG506dUorV67UnTt3lD17dj333HNOrjr1sPUV06dPV5s2bZQzZ07FxcUpXbp0KlKkiE6cOKF06dKxjSaj33//Xe3bt9e7776rAwcOqFChQoqIiJC/v7/WrVunmjVr6tChQ8qRI4eKFSsm6f/CI5LG1mbfffedoqOjNW3aNHXt2lVHjhzRK6+8ok6dOik0NFSjRo1SVFSU7t69++z1yQZpitVqNcYYc/LkSdOjRw8zYsQI+3NXr1417u7u5tKlS84qL83btm2bsVgsZtKkSebChQsmNjbWZMuWzezZsyfRepUqVTITJ040xhgTFxfnjFJTrVatWpn27dubLVu2mKtXr5rw8HBz+/Zt4+vrazp06GD27dtnjh07ZoKCgowxxiQkJDi54tTB1ne8++67JleuXObChQv253777TdToEABY7Vaac9kEh8fb4wxpm/fvqZp06b25Rs3bjTe3t4mLCzMviw0NNRYLBZz+vTpFK/z3+zevXtm8uTJpnDhwmbGjBnm3r179ue8vb3N4sWL7Y9t/574Zzdu3DA9e/Y0BQoUMIsWLTLh4eHGGGP8/PzMW2+95eTqUrewsDBjsVjMqFGjzMGDB83NmzeNMca88MILZty4ccYY9jmS07Fjx0z16tVNv379TEJCgrl79659edasWU10dLQxxti3cTw52z7Kjh07zOuvv26GDRuW6Pk8efKYH3/80QmVPT5CdxqUkJBgrFar2bBhgyldurSpXLmyCQoKMgMHDjS+vr72HQfbBozkc+HCBdO9e3eTL18+4+npaYoXL27y5Mljrly5Yl/n1KlTxsXFxURFRTmx0tTr7Nmz5tVXXzUvvvii2b59u315pkyZzOrVq51YWdowZswYU61aNZM1a1ZTrlw5M3PmTFO/fn3z8ccf29eJi4uj/0gmbm5upmbNmmbdunUmLi7OtGzZ0vTo0SPROtOmTTMlSpQwxnAQyRkCAgJMw4YNzciRI40xxhw+fNhkzpzZXL16lbD9FBYuXGhefvll+8GLTJkymXXr1hlj2D95UmfOnDE1atQwhQsXNpUrVzb9+/c306ZNM5kzZzbHjx93dnlp0qlTp0yTJk3M66+/bk6ePGmMMebtt982LVu2dHJladfmzZvNc889Z2rVqmWCgoLMpk2bTJYsWUxwcLAx5tn9nrQYw4wKadndu3f1wQcf6MqVK1q3bp3mzZunNm3aOLusNC8mJkYbNmzQL7/8opUrV8rNzU2vvPKKevfurWXLlunQoUPasmULw4yeUFxcnD7++GMdOnRIM2bM0Pnz59WxY0cFBgYqS5YsDH1+CtHR0bp27ZqOHj2q3377Tb/99psuXLigMmXKaNCgQfLz8+OawGQ0a9YszZw5U0eOHFGJEiV0+vRpTZ8+XX5+fsqUKZPSpUunKlWqqE2bNho8eDCXAqUg2+6RxWLR6tWr1bt3b9WoUUOXL19WoUKF9OOPP3KpxROwDfeMjY3VtGnTNG7cOGXIkEEJCQk6fvy4PD095eLiQrs+hfPnz+uHH37QypUrdeHCBcXGxmrAgAGqWbOmSpcuLR8fH/Y9klFQUJAGDx6sw4cPa+LEiWrdurWWLFmi1157zdmlpVmhoaHq37+/MmTIoH379umFF17Q9OnTnV3W33Nu5ocj2Y70XL582XTs2NHkyJHDjB49OtEQOSS//z1Cf+PGDfPdd9+ZmjVrGnd3d2OxWMyKFSuMMQxJfBK29r1165bp16+fyZcvn3F3dze9evUyxtCmySk8PNwcOXLEzJ8/3/j5+ZkCBQqYTJkymQ4dOji7tDTn0qVLZtiwYaZkyZLGxcXF1KhRw0yaNMmsXr3auLu7MzzxGRAaGmratWtnXFxczE8//eTsctKMgwcPmpo1a5p69eqZO3fuOLucVO1Ro5AOHjxo3n//fVOyZElTokQJU6NGDbN7924nVZh2Wa1WM2LECJM/f35TsmRJZ5eTptnyzalTp8zrr79uLBaLGTx4sImNjXVyZX+PM93/Il9//bXmzZunN998UyNHjny2JhdIIx5s00e176lTp7RlyxZ1797dGeWlST/++KO++OILNWnSRBMnTnR2OamebeKdB1mtVt28eVNBQUHy9/dXpkyZ1L9/f0ZqJIO4uDi5uLgkase9e/dq6tSpWrVqlSIiIlS9enXt2bOH9nYiW9sHBgbqo48+0ubNm/X111+rXbt2ypQpk7PLS5XM/7+3saurq3bs2KHu3bvr7t27Gjt2rP3OCXh85oFRF3FxcXJ1dX2oDX/55RctWbJEkydPtt/5A0/P1vYRERH65ptvNHr0aHXp0kXDhg1T7ty5nV1emjd9+nQtWrRI7dq1U+/evZ1dzl8idKdRD+6c2XairVar5s6dq969e2vt2rVq2LChk6tMOx78srt69aq8vb117949BQcHy8fHRzdv3lRMTIyyZcvGDloySUhIkIuLi6xWq+bNm6cPPvhA5cqV0+TJk1WtWjVnl5dq2LbdB4ctx8TE2O8ZHR4erixZsjy0/MHXImls7fbggbm/Gjbu7++vAgUKqGLFigwtT0H/dAB19OjRmjRpkmbNmqXXX3/dCRWmTra2fFTfER8fr5YtW8pqterXX391UoWp2927d+Xp6SlJioiIsN+69Nq1a/a7TyB5PWpbXrVqlf0OB7NmzWK/L5mY+3ORycXFRQkJCTLGyM3NTTdu3NCMGTM0fPhwTZgwQQMGDHB2qY9E6E5jIiMj7f+579y5o2zZskmSQkJClCdPHlmtVs2fP1+dO3d2YpVph20HYsGCBRo9erRKlCihdOnSad++fSpevLgk6ezZsypSpIju3LmjY8eO6dSpU/bn8PgePJD0qJ3gM2fO6LXXXtOgQYPUuXNnAuFjsrXTmDFjtGfPHnl4eChfvnzau3evihQpovj4eF26dEm5cuVSaGiocuTIodWrVzu77FTrf7fLixcvqkCBArJarbpw4YIKFy6sGzduKDQ0VMWKFZPValXGjBmdWDEexRijYcOGqXXr1qpQoQL9zT94sH1sB/Li4+MVFRWlrFmz6ubNm8qSJYsuXLigq1evql69eozseAy2dj1w4IAmT54sHx8f7dq1SxaLRYUKFdKhQ4dUqFAhpUuXTseOHVNUVJQWLlyoBg0aOLv0NO/nn3/W+PHjtXPnTmeXkiY8Th+7cuVKVa9e3f6d+qyNluGQeRoRERGhPn36qECBAtqwYYNy5sypXLly6eDBgypYsKAsFotOnTql9OnT6/3335fEWarkYPsPvXjxYnl6eqpevXoqU6aMevbsqXv37mnatGnKmjWrWrdurdy5cytDhgwE7ifk6uqqmzdvKleuXHJxcbGPKIiKitL169dVvHhxffrpp2rcuLGzS01VLBaLgoKC9PHHH+vDDz9Urly5FB0drTZt2ig8PFyfffaZ2rdvr4wZM6pUqVKqW7eupL8+M4u/Z7FYFBYWphdeeEHFixdX5syZtXHjRhUuXFg5c+bU3r17VbFiRd25c0dHjhzRxx9/rC+//NLZZf8r2L4TV6xYoevXr8vb21uBgYGyWq3y8fHRyZMnlSNHDrm4uOjkyZNq3LixKlSoIEl8l/4FW3CeOXOmli5dqjJlyujGjRs6deqUKlSooGvXrik6Olp58+bV+fPnFRMTo4MHD0oSgTsJpk6dqsWLF6t3797q0aOHDh48qKJFiypTpkz69ttv9emnn6phw4Y6f/68fH19nV1uqhYVFWXft75y5Ypu3bqlokWL6uLFi3J1dVW2bNkUHBwsSVq3bp2kR58owD+z9clz585VcHCwjh07pnLlyun69eu6ceOGChcurMuXLysqKkqenp7KnTu3WrVqJUnPZHtzpjuNsJ29/uCDD1SnTh0dPnxYXl5ecnFxUffu3fXZZ5+paNGiOnr0qHr16qXixYvTCSSj48ePa/To0fL29tbQoUOVI0cOSVKpUqX03nvvqW/fvk6uMHV75ZVXlD59euXMmVObNm2Sl5eX8ubNqwMHDqhMmTKKiIjQ3r171blzZ82cOdPZ5aY6t27d0uDBg3Xw4EFNnz5d1atXl5ubm8LCwpQ7d25duHCB6/+S0YoVK/TWW2+pY8eOeuutt5QzZ05dvnxZsbGxeueddzRq1CiVLVtWWbJkUcmSJeXt7U1/nUJOnTql0qVLq3z58sqZM6eKFi2qEydOKE+ePFq9erV8fHxUoEABubm5qUWLFho4cCD/No+hcOHCypEjh5o3b65SpUopKipKrq6umjJlilxcXPTqq68qf/78cnV1VZcuXWjTJDp79qwmTJigXLlyacSIEfblb731ljw9PbVgwQInVpc22LbJjz/+WJMmTVKmTJlUoUIFRURE2Ecp7d+/X9myZVPJkiV17NgxBQYGqlChQs4uPVWz9cmffvqp3N3ddfToUfn4+Mjd3V2jR49W69atlSlTJp07d07vvfee3njjjWd2lAyhOw0wxujWrVv69NNPdePGDY0ZM0YlSpSQJE2ZMkWzZ8/WwYMHOSvlYIcPH9bgwYMlSTNmzFCGDBlUpEgRHTt2TCVKlOBMyBM6duyYKlWqpJdeekl+fn4qWLCgTp48qYIFC+rNN99Ux44d5evrq8yZM6tAgQLy9fV9ZjvcZ92ECRPk7++v3r1764033tCQIUO0e/dubd68WdKzeeQ4tZoxY4b9QFGdOnUkSZMnT9bcuXN15MgRJ1f373X27FkNHDhQ9erVS3Rd4KlTp1SlShVduXJFGTNmVHR0tDJnziyLxcKoscewbt06LV68WPXr11eXLl3sy3PlyqW5c+fq1VdfdWJ1acPOnTv14YcfKjQ0VNOmTVODBg2UMWNG/fDDD3rttdcS3QIPT+6TTz5RYGCgJkyYoBw5csjDw0Pp06fXm2++KUmaPXu2rl69qqxZsyp//vz0D0/pwoULat++vW7fvq0ffvjBPrroypUrKl68uI4ePWrPPM98WztyanSkrBs3bpjevXubYsWKmQULFhhjjClbtqwZPny4Meb+7Qye1RvGpxUhISGmffv2pk6dOsbX19c0bNjQGPPwbcTweGztNn/+fNOjRw+zadMm+3O///67yZYtm4mOjnZWeWmGrV+IiYkxo0ePNpkyZTJDhgwxWbNmNbNnz3ZydWnTrVu3zNChQ42Xl5f57LPPjDHGlClTxowYMcK+Dv2Gc+zcudOUL1/e1K5d22zfvt0YY8z7779v6tSpwy0Jn5DVajXLly83pUqVMm3atDHR0dFm165dJmvWrObKlSts68kkLi7ODBo0yHTo0MF89NFHpmjRos/8bZRSmytXrph33nnH5MyZ0yxcuNBERUUZY4zJly+fmTVrlpOrS7uGDRtmmjdvbvbs2WOMMaZv3772fezU0i8TutOgr7/+2tSvX9+MGDHCZMqUyVy+fNnZJf0r2HYaYmNjzdChQ022bNnM4MGDnVxV2nD79m3z+eefmxw5cpi+ffsaY4xp06aNef311+3tzk5b8tm9e7epUaOGyZkzpwkODnZ2OWnazz//bOrVq2fatWtn3N3d6a+fEbGxsea9994z9evXNydPnjTe3t5m3rx5zi4r1Tt+/Lhp2rSp6dixo6lZs6Z59913nV1SmmE7eBoUFGTatWtnLBaLadiwoQkPDzfGpJ5gklosWrTIvPTSS2bNmjXm+PHjJnPmzHxfOoBtu71y5Yrp1q2byZUrl/n+++9NtmzZzOLFi51cXdIQutMQW+iIj483Y8aMMZ6eniZfvnzmwoULxhjDWe4U8OC/wciRI022bNlM7969zbVr15xcWdqwceNG07hxYzNkyBDj6elpAgICnF1SmmIbDWO1Ws26detMsWLFTLly5cxvv/3GDlsye/Ag0apVq0ypUqVMuXLlzLFjx5xYFYz5v+/KkJAQ06tXL5MhQwaTK1cuExISYozhAN+TsrXbuXPnTIsWLYy7u7uZOnWqk6tKuxYsWGB8fX3NV1995exS0hRb/xAZGWnGjRtnvL29jYuLi2nTpo0x5v7+H32E48yZM8eULl3auLu7m5s3bzq7nCQhdKdhu3btMo0bNzadO3c2oaGhzi7nX2nt2rUmb968ZuTIkc4uJVWzWq32L7E1a9aYEiVKmNy5c5utW7c6ubK07caNG6Zdu3amdOnS9oN3cIwDBw6YunXrmho1atiHNLPj9myYMGGCyZcvn/nss8/4N0kmt2/fNp07dzb58uUzM2fO5KBeMrKFwujoaDNt2jRjsVjM66+/7uSq0q6dO3ea559/3jRv3tyEhYU5u5w0y7Zdx8fHm2XLlpnSpUubt956y5w9e9bJlT0+JlJLg8wDk2WsWbNGvXv3lqurq06fPs1kainEPDCZw/fff6/nnntO1apVY0bWZHL27Fn1799ft27d0pgxY/Tiiy8++xNopDK2yeiOHz+uUaNG6YcffnB2SWlecHCwevbsqcOHD+v06dNyd3d3dkn/ag/2KT/88IM+++wzVahQQbNnz1auXLmcXF3aMH78eH3xxReaPn262rVr5+xy0iR/f3+FhYWpTZs23OoxGT24r71z50717t1bd+/e1fjx45kYMAVs2rRJQ4YMkSStXbtWOXPmdHJF/4zQ/S9w8eJF/fe//1W/fv2Y1Rmpnm1H+OrVqxo4cKBWrVqlEydOqHDhws4uLc3jwIbj2Nr23Llz2rZtmzp27MhBumfAg9v80qVLNX78eB04cMDJVaV+tnaNi4vT8OHD1bFjR5UoUYI+Jhk9GArpSxzvxo0bevXVV9WoUSONGDGCbTkFHDp0SCNGjNDPP//s7FIeC6E7jbMd1eTopnMYbtHhUDdv3tTs2bPtRzuR/NhZA/5PRESEMmfOzP8LAHa2gH39+nVZLBblyZOHPiKFxMXFKV26dKniIAehGwCAZ0Rq2HH4t2InOvnRpgD+LejpAKRaVqvV2SWkacYYJSQkOLuMfxUC97OLcJj8aFMA/xb0dv8CDGZIWbYgeOPGDSdXkvaxw+ZYFouFOSAA4BlljHno4LPtcWhoqOLi4hItA9KS1LZds8eaBvzvRmcL2VFRUYqJibFPooGUYQuCvr6++uqrr2h7PLNsfYXVarVvp7Y//f399cILL+jYsWNOqy8t+auDn7b2Dg8P1/Xr1/92XTgf/zZPz9aGYWFhTq4kdbK1X3x8vCwWy0MHn22jZYYOHaqZM2dK4gB1SmF/L2Wltu06dVWLR/rfjc7WIU+bNk3vvfeeYmNjU92GmVpERUUpKChIp0+fTrQ8NjZWfn5+WrlyJbdaegK2bfivdnCNMQSUZGDbOXNxcbH3EbadBldXV7m5uWnmzJmKiYlxWo1phdVq1ZUrVyQ9epv99NNP1bJlS12+fJkh5k7yvzvMtksr9uzZo4ULF0pi+P+TeHB7t81ZEBkZqXr16mnNmjVOrCx1srXnxx9/rM6dO+vu3buS/m/7tVgsunfvnsLCwjRkyBB99NFHfE8mk//dN7H1Edu2bZOU+kLgs+zBkwK2drZt45s3b1aHDh109epVp9X3JNg6UiHbhrhgwQLVqFFDFy5ckPR///lt/+ljY2MVEBAgPz8/RUdHO6XWtMbW9uHh4Zo2bZoKFSqkZs2aqWfPnjp//ryk+zMpenh46Msvv9THH3+srFmzOrPkVMlisejmzZsP7eDaOtzFixfrtdde04ULF9gJTiJbP3H69GnNmjVL3bt318cff2y/DZLtLgcNGjTQrFmzdPHiRS6VeAq2PmPt2rV6/fXXFRQUlGibtfXXLVu2lNVqVZ8+fRQaGuqUWv/tXFxcEoUT26UVmzZtUseOHfXll18qNjbWWeWlWrZbg9n+LknR0dHy8fHRp59+qo0bNzqzvFTH1mdUqFBB+/bt09ixYxMtlyR3d3ctW7ZMO3fuVIkSJWSxWAjeycC2/dr+dHV11b1799S0aVNVqVLloRMweHK2g0cuLi72vti2jf/55586ePCgvvnmG0mp5+QLoTsVsv1nL1eunNzd3TVq1ChFREQ8dO3lZ599pr1796p69erKkCGDM0pNc2yBZcKECZo3b55++OEHNWrUSBcuXFCBAgUUHR2t9evX6/bt25KkN954Q82bN3dmyanSmTNn1KhRo4eGNts63OLFiysqKkrvvPOOzp4964wSUy1bP9GlSxeNGTNGQUFB2rlzp1577TVVr15dX3/9tc6dO6d06dKpfPnyWrNmjQoWLOjkqlMvW3+dN29eGWP00ksvaf369ZLu7yjYdhbq16+vjRs36vXXX1eOHDmcVu+/ie0g3t27d7V06VJ1795dw4YN02+//ZZovf79+2vdunXat28fB7D/ga1NIyMjtXbtWr388stq0qSJvvzyS23atEnx8fGSpDx58uiXX35Rp06duJ3pE2rXrp0++ugjff/992rdurX9BIx0f18lISFBlStX1rvvviuJURpPw2q16scff9SKFSu0Zs2aRAdG3dzctG3bNlWtWlX+/v5OrDL1s/Ufly9f1rfffqu33npLzz///EMjYnr27Knp06fr999/f+hA9jPNIFULCAgwpUqVMqVLlza//fabMcYYq9Vq4uPjTXx8vJOrS7vy589v/vOf/xhjjHnjjTfMgAEDjDHGnDlzxrRo0cIsWrTIGHP/3wJJ9+eff5o6deqY0qVLG39/f/vy/23PKVOmmOjo6JQuL9Wytd+ePXtM1qxZzfXr101YWJg5duyYWbJkienZs6epWrWqSZcundm3b5+Tq0177t27Z7p3725q165tNm3alOi5hISERH8i5bz99tvmueeeM+3btzcWi8WMHz/eGGPMrVu3zL179+zrnT592lklphpxcXHGGGOGDBliihUrZlq3bm06duxoihcvbrJmzWr69u1r7t27l6gv53vy6ezevdtUr17dNGzY0Jw5c8bZ5aQZtr749OnTpnXr1qZw4cImZ86cJm/evObcuXPGGGNiYmLs6588edL8/vvvxhi26af16quvmipVqpgpU6YYV1dX88EHHxhjjDl27Ji97VMjQncaEB4ebt555x3j6+tr/w8Pxzl79qwpU6aMCQwMNLdv3zaZMmUyBw8eNMYYEx0dbUqVKmU2btxojGEH+mnExcWZPn36mKpVq5r//ve/iZ6zHVB6cIcY/8y2I7Bv3z7Tt29fExsbm+j527dvmz179pi5c+c6o7w0y2q12vuCCxcumE6dOpl06dKZESNGmPDwcGPM/W2aHbWUY/v32Llzp8mbN6/5888/jTHGZMmSxezfv98YY8zYsWPN559/bsLCwpxWZ2qVIUMG8+uvvyY6+L9ixQqTK1cuM2PGDGMM34/JKSQkxPj5+ZkXXnjB7Nmzx9nlpAm2A0idO3c2zZo1MzExMebHH380ZcuWNcYYc/36dfPZZ5+ZAwcOOLPMNMPWH2zZssXkypXLhIeHm7CwMJMtWzZz7NgxY4wxs2fPNn379jW3bt1yZqlPjOHlqZR54PqFTJkyad68eSpfvryaNWumuXPnPnI9PB3z/2/N4ePjo9KlS+vAgQPaunWrSpcureeee06StH37dgUHB6tBgwaSmFTjSVmtVrm5uenTTz9VzZo11bp1a33yyScKDw+3r2OMUbp06ZxYZepjG4I1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meXu7u7sEtOM+Ph4RUVFacOGDRo8eLAuXbqk9OnTy9vbW2+//ba6desmHx8fZ5eZLAjdqcjZs2f19ttv68yZM7JarXrnnXfUoUMHVapUiSPzDnDmzBm98847slqtypQpk8qWLauqVauqevXqiYKgMUY//PCDChYsqBdffDHNHJFLaSVLllS5cuX0wgsvKCoqSuvWrdOpU6dUvHhxtWjRQgMHDlTmzJk5qpxEtp3hr776SgEBAdqyZUuibTQkJER169bV+++/r549ezq52rTj6tWrGj9+vI4ePapNmzapVKlS6tKlizp06KDcuXMnWpfhyynDdsnK1atXNWrUKEVGRqpZs2Y6d+6cFi5cqJMnT6p+/fqqVKmShgwZYp84E0kXHR2tH3/8UcuWLdOff/6puLg4DRs2TN26dXN2aalGfHy8vvjiC61atUrHjh1T6dKl1alTJ3Xo0CHRtnn79m2dOXNG8fHxqlmzJvsgTygwMFBZs2aVt7e3fVlERIS+//57ff/99/rzzz9VunRptWrVSs2aNWMOn2Rg21avXLmitm3bql69eqpataqioqK0fft2LV26VNHR0fLx8dGaNWtUsmRJZ5f8VAjdqdDly5e1bNkyLVy4UH/88YcqVaqk1157TV26dFHBggWdXV6a8OBO8K5du/TLL7/o999/V0REhPLmzauKFSuqWrVqqlatGkPKk8GpU6fUvHlznThxQm5ubrp7966uXLmiY8eOadOmTVqyZIl+/PFHvfTSS+xQPKEpU6bYbzWTK1cuxcfHy2q1yt3dXe3bt5eHh4e+//57hsslo8jISAUHB+v48eNau3attmzZolu3bql48eL68ssv1ahRI2eX+K9i6zsGDRqkY8eO2WfBtRk3bpw++ugj5c6dW5cuXUp0qys82oP9RUxMjE6cOKHs2bPbh+NK92+7NGvWLL322muqVq0aB5mSwBijO3fu6NixY1qxYoVWrlypa9euqVatWurevbveeuutR859gqS5e/eunn/+edWoUUMvvviiypcvr6JFiya6NOLs2bOaMWOGvvnmG7Vq1Ur/+c9/nFdwGmHrk/v06aOzZ89q3bp19uciIiK0YMECjRo1Si1atND06dNT/b4fofsZZ/tCi4mJ0ZkzZ+Tj45PoGu3Dhw9r0aJFmjRpkubOnasOHTo4sdq0IzY2VidPnlSlSpXsy6KiorR+/XqtXbtWx44dk9VqVZEiRVSsWDH5+fklWhePzxijuLg4ffDBB2rdurXq1KmT6Pnw8HAFBQUlGlqHpLt8+bKqVaumpk2batiwYfad4jNnzqhhw4aaMGGC3nzzTQ5qPAVbfx0eHq4rV64kulVPWFiYLl68qEOHDmnRokXq1q2b/Pz8CCBO0KxZM+XOnVsLFiyQ1WpVbGysPD09FRQUpHHjxmnQoEEqVKgQ/zaPwdZfzJ8/X9OmTVNMTIyyZcumQoUKqXHjxmratCkjBpJJfHy87ty5o61bt+qHH37Qb7/9JkmqV6+ehg4dqho1aji5wtQrOjpaY8eO1ZYtW3T27FkVLFhQtWvXVo0aNVS2bFkVKVIk0YjSO3fuKFu2bHxfJpNOnTopISFBCxcuTLQ8JiZG3bp10+uvv6433ngj1Z8UIHQ/42wb2IQJEzRmzBh16NBB9erVU7ly5eTt7W0/Ep+QkCCLxcIOQjKZP3++tm7dqnnz5un69euKjo5+6Mi9v7+/Nm3apD179mjFihX2ezUi6a5cuaJu3bopV65cmjhxonLlyuXsktIEW2gICQlRnjx5tGHDBg0ZMkRhYWEqUKCAChUqpAMHDihv3rzatGmTs8tNM6ZPn6733ntPNWrU0DvvvKPWrVvbg4dtErtcuXKl6p2H1Gzx4sUaPHiwAgICHrpUqGDBgpo9e7ZefvllJ1aY+uTKlUudO3eWj4+PQkJCdPToUV2+fFkZMmRQwYIF9cknn3Dg9CnFxcUpPDxcOXPmlHT/gKnt3uft2rXTkCFDOFCUDI4ePapFixZp7dq1Cg8PV+nSpVW3bl09//zzKlGihHx8fGjjZPbTTz+pdevWmjx5st566y15eXlJun/SpXz58po3b54aNmxI6EbKuHr1qr799lv997//1ZUrV1S2bFk1bdpUdevWVeHChVWgQAE6gWS0detWpU+fXi+88IK++uor/ec//1H9+vVVt25d1atXL9GQI9vMrUga2xHijRs3qkePHnJ3d1dISIgiIyPVuHFj9ejRQ6+88oqzy0wT2rZtq/Hjx8vb21vHjh3T9u3bdfToUV26dEmNGzdWmzZt5OXlxQ5bMomOjtaePXu0fPlyrVy5UhEREfZtul69esxQnsL+92zUzZs31b59e23fvl2vvvqqWrVqpbx582rq1KnasmWLrl275sRqUw/bDvCOHTvUv39/7d+/3/7chQsXtHfvXu3bt087d+7UokWLmKgxiWz9cXBwsL777jvt3r1boaGh8vX11cSJE+19dUxMjNzc3OTm5pbqQ4kzhISEaOXKlercufNDE6Rt2LBBixcv1o4dO+Th4aH8+fPr888/14svvuikatOuL7/80n4Cq3Tp0oqKitL+/ft1/PhxnT9/3tnlJQtCdyq0b98+zZo1S0uXLlXevHlVqFAhLVy4kOu5HWTt2rVatWqVzp49az/KXLVqVTVq1Ei+vr5ydXUlrDwBW5s1atRIRYoUUd++fZUxY0bt3LlTS5cu1bZt2xQfH6/Bgwdr5MiRzi431bC1q+1WMqtXr1b79u11+/btRDtkf3UfdCQv28zw33zzjT2UHD169JGz8iP5XblyRUuXLtXAgQMT9dH37t3TnDlz5O/vr/379+vmzZtq2rSpunfvrubNmzNs9DHY+hp/f38tW7ZMo0ePVv78+ROtk5CQoHPnznFLwidga99XX31V8fHxeumllzR79mz5+vpq9uzZOnPmjC5fvqw6depwJ4Sn8O233+rYsWOaNWuWAgMDtXPnTr344ouJJu2KiYnRihUrNGvWLM2aNUtly5blAMcT+uOPPzRixAgtW7YsUfuFhYVp6dKlWrFihe7cuSOLxaLixYtrwIABql69eprokwndqdjmzZvVvn17VatWTT///LOzy0lT4uPj5ebmpqtXryp79uzy9PTU0aNHtXPnTu3du1fnzp1TfHy8smTJosWLF9uHeyFprFar3n33XfXs2TPRkePo6GhduHBBK1asUIECBdS5c+c00eGmpJYtW+r06dOKjo7Wiy++qPnz59ufs+0sHDlyRFeuXFGzZs2cV2gaZftqte1UbNu2TUOGDNE777yjPn36OLO0f5W5c+dq48aNWrJkiQ4dOqQtW7aoVq1aKlu2rDJlyqSbN28qOjpa6dOnl6enZ6I5U/DP7t69q2bNmunIkSN666239MEHH6h48eLOLivVs/XRFy5cULly5XTixAn5+PgoT548WrRokZo0aaKAgAD98MMP+uyzz1S0aFFnl5xqJSQk6NatW8qTJ4+GDh2qZcuW6bnnnlP58uX1/PPPq0qVKg8dTMKT27lzp3799VeNGjVK/v7+Wr58uT744ANVqFDBvs758+eVPXv2RKNK0wJCdyqwZs0alS9fXvny5Us0m+rdu3c1dOhQ9ezZU6VLl+aoWzKytWXv3r0VHR2dKLDExcXpwIEDCggI0K1btzRp0iSn1Zla2QL03r179d133yk2NlazZs1KdB90SWzTTygqKkqrV6/Wnj17NGXKFBUuXFgFCxZU48aN9eabb6pUqVKS7k/AU6tWLX311Ve0dTIZPXq02rRp88i7GnTu3FktWrRQy5YtU76wfzFbf/P555/r66+/VoUKFVS1alU1aNBA1apVU758+eTp6ensMlOl4OBgTZ48WadOndLRo0eVL18+lSlTRvXr11eDBg3s12YiaWz98Zw5c7Ro0SJt2bJFP//8swYMGKDAwEB5enpq8+bN6t69u44fP85M+8kkMjJSv/zyizZs2KDAwEC5urqqaNGiqlatmsqVK6f69esrXbp0fFc+JdsojuXLl+vDDz/UtWvX5OPjo/bt26tLly7Kly+fs0t0CEL3M27Pnj3y9fVV8eLF1bx5c7Vo0cJ+hD4mJkbFixfXunXr9MILLzi71DRp2bJlGjBggIoWLaoxY8Y8NLN2bGysPDw8CCxPqHfv3po5c6YkqUePHurSpYvKly/PfeeTybZt2zRnzhw1aNBAO3fu1NGjRxUWFiYfHx8VKVJEP/30k/bt2ycfHx+24WRw6tQpVa9eXdHR0apUqZK6du2qNm3aKEuWLDp06JBeeuklrVu3Ts8//zztnUL+99Kfc+fO2a+1v3r1qgoXLqwGDRqoYsWKatKkibJkyeLEalOvW7duae/evdqyZYuOHj2q8PBwJSQkqEOHDurVq5ezy0u1du/erQ4dOmj37t3q0qWLChUqpClTpkiSBg0apKNHjyogIICRYE/BNrJxz549ypIli33Cv/Pnz+vXX3/Vb7/9psuXL8vFxUUBAQFp7uyrs0VGRurIkSNasWKFfvrpJ125ckW1a9dWmzZt1K1btzS1XRO6n2G2nbJr167pu+++05w5c+y3/SlWrJgOHz6szJkza+/evc4uNU07deqUBg8erDt37mjixImqWrWqJM7CJpcLFy5o2bJlmj9/vk6fPq2KFSuqffv2atq0qUqXLu3s8lKdatWqqUmTJurWrVuis60hISE6ceKEDh8+rEOHDun69etq3LixBg4cyJwEycRqtSokJERHjhzRDz/8oF9//VUREREqVqyYEhISlD9/fmaJT2G2bfv69evKkCFDouHje/bs0dKlS7V+/Xrdvn1bgYGBypEjhxOrTZ0iIyOVKVMm++Nz585p586d8vf3V9euXdWwYUP6mMdg26c4d+6cPD09lS9fPhlj1KZNG4WGhmrz5s3auXOnKlasqJ9//lmff/65xo0bp9dff53QnQzeeustrV27VnPnztXrr7+eaM6Tffv26dixY+rcuTP7fk/Jtq0GBQUpKipKhQsXloeHhxISEhQWFqZt27Zp6dKlWrVqlS5fvpym7mZD6E5lDh48qLlz5+rs2bNq2LChmjVrprJly9LhOkBCQoKMMXJzc9O5c+c0aNAg7dmzR0OGDFHv3r2ZhOop/NWX1oEDB7Rw4UL98MMPCg8PV0RExEOzieKvhYSEaOjQodq/f7/Onz+vypUrq0ePHmrZsmWiofs3btxQ9uzZ7ZPvsBPhGDdu3NCuXbu0a9culShRQq+99ppy585NAElBtm27W7duypkzp/r06fPISUd37dolX19f/m0eg21/48SJE1q2bJlWrFihyMhIvfTSS+rSpYtq1arl7BJTJdu2V79+fbVr106dO3eWdP8gxtChQxUQECA3Nzf5+PgoKChIPXr00PDhw51bdBrz/vvva+/everXr5/atGnj7HLSJFuf/MYbb6h69erq1KmT8uTJo+joaEVGRtpvr3n16lV5e3unqf0TQvczyNbx3rt3TxcvXtS2bdt09+5dvfXWW/aNESnnwQMaI0eO1G+//abWrVvrvffeS1OdQUq7dOmSfv31Vx09elTZsmXT4MGD7WeZEhISdOTIEVWpUoUDSkkUFhammzdvav/+/Ro1apSOHTumbNmy6cUXX1TXrl3VvHlzZ5eYptj66+joaG3ZskXnzp3TxYsXVaFCBTVr1ixNHaVPbWz985kzZ/T8889ry5YtqlSpkmJiYtS5c2edOXNGHTt2VO/evROtj8dTq1Yt3bt3T61bt5bFYtF//vMf7d+/Xz169NDYsWMZqv8EjDHq3r27Lly4oICAgETLDxw4oN9//13R0dGqX7++qlWrZn+O7fbp2Prxa9euafTo0Zo+fbq6du2qTz75RAUKFNC9e/c4AZAMbO188uRJvfDCC9qxY4cqVKig69evq3v37jp37pyee+45zZw586E5ftICQvczxhgjY4xcXFw0dOhQzZs3T7ly5VJ0dLQuXryounXr6quvvlLNmjUJIw5g6xAW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o+rWraslS5aoSpUqCggI0O+//65jx45p27ZtunbtmnLkyKF+/fpJEv16MrG1ozEm0cS5bLNPz8/PTytWrNCLL76oHTt26IcfflCTJk0kSceOHVPXrl0lcQDpadn2OXLlyiUXFxcFBQWpQIEC9udLliyp6tWr68qVK8qQIYOktLt9c033M8B2RGfYsGGaPn26KlasqG3btilPnjx699131b59e0VERMjX11dnz55VkSJF0uxRoGfBlStXtGvXLm3fvl0nTpzQ3bt3lZCQoO+//14VKlRwdnmp2qFDh7RixQrNnz9fN27cUJ06ddShQwc1aNAgUSeMx/d3fcH58+f1xRdfKD4+XhMnTrSf9cOTsx24WL16tT755BMdPXpUN2/eVLdu3ZQ7d25NmzZNo0aN0uHDh7Vs2TJ5eHg4u+R/laNHj2rNmjXaunWrjh07JovFohYtWujFF19U9erVVbx4cWeXmCrZtvv/7W8OHTqkI0eOKFu2bCpfvryKFy/Owb0nZJvEi/27lGG1WrVmzRodP35cxYoVk5+fn+Li4rRmzRp17dpVQUFBTKqWjIKCguy32hw8eLBq1qwpLy8vXbx4UfXr19fHH3+srl27pumDHITuZ8jgwYNVvXp1vf766zp69KhWr16tn376SX/88Yfy5cunV155Rd999x1faA4SFhYmNze3RJPAHD9+XFu3btXBgwc1a9YsZtNORhs2bNC8efO0bt06hYWF6fDhw6pYsaKzy0q13nzzTWXMmFHBwcEKDw9X0aJFdfr0aR09elRxcXEqVKiQJk+erNdee83ZpaYJJ06cUNu2bVWuXDmdO3dOuXLl0rhx41S6dGmNGzdOq1at0vbt29mBTiHGGBljEgXDnTt3atWqVdq1a5eio6OVP39+lS9fXrVq1WLY6GOy7W/cuHFDa9as0erVq+Xh4aG2bduqRYsW9vXYzp+MrX337dunhQsXauTIkfbJ/WhTxwoNDVVMTIy8vb3ty/bt26cZM2bI29tbX375ZZoOgI5248YN5c6dO9GywMBAffDBBwoPD1eWLFl0584dXblyRV5eXtq1a1eab2tC9zPi4sWLKleunM6ePSsvLy9J9zvcsLAwhYSE6MaNGypdurRy5sxJ6HaAX375RfPnz9eOHTuUPXt2NW/eXO+//7791ie2jpcvwaSxtVdMTIwOHDigvXv3ytXV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",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Your code for Task 4.1 here\n",
    "df_jobs = pd.read_csv(\"jobs.csv\")\n",
    "top_locations = df_jobs[\"location\"].value_counts().nlargest(10)\n",
    "plt.figure(figsize=(10, 6))\n",
    "top_locations.plot(kind=\"bar\")\n",
    "plt.title(\"Top 10 Job Locations\")\n",
    "plt.xlabel(\"Location\")\n",
    "plt.ylabel(\"Number of Jobs\")\n",
    "plt.xticks(rotation=70)\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Task 4.2: Visualize Author and Quote Insights\n",
    "\n",
    "**Instructions:**\n",
    "1.  Using your `quotes_with_authors.csv` data, create a bar chart of the top 10 most quoted authors.\n",
    "2.  Create a horizontal bar chart of the top 15 most common tags."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Your code for Task 4.2 here\n",
    "df = pd.read_csv(\"quotes_with_authors.csv\")\n",
    "top_authors = df[\"author\"].value_counts().nlargest(10)\n",
    "plt.figure(figsize=(10, 6))\n",
    "top_authors.plot(kind=\"bar\")\n",
    "plt.title(\"Top 10 Most Quoted Authors\")\n",
    "plt.xlabel(\"Author\")\n",
    "plt.ylabel(\"Number of Quotes\")\n",
    "plt.xticks(rotation=50)\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## üéâ Congratulations!\n",
    "\n",
    "You have completed the Grand Web Scraping Assignment! You have successfully scraped data from multiple websites, handled pagination and detail pages, cleaned the data, and performed insightful analysis. This project demonstrates a complete, practical workflow of a data analyst. You should be proud of the skills you've developed and the project you've completed."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "base",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
